<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kt.aivle.rslt_list.mapper.RsltListMapper">

  <sql id="getJutaekList">
    <if test="location != null and location.size > 0">
      AND (
      <foreach item="loc" collection="location" separator=" OR ">
        j.jutaek_address LIKE CONCAT('%', #{loc}, '%')
      </foreach>
      )
    </if>
    <if test="minSize != null and minSize != '' and maxSize != null and maxSize != ''">
      AND CAST(jd.jutaek_type AS UNSIGNED) BETWEEN #{minSize} AND #{maxSize}
    </if>
    <if test="minGuarantee != null and minGuarantee != '' and maxGuarantee != null and maxGuarantee != ''">
      <choose>
        <when test="inputRank == 1">
          AND jd.a_guarantee BETWEEN #{minGuarantee} AND #{maxGuarantee}
        </when>
        <otherwise>
          AND jd.b_guarantee BETWEEN #{minGuarantee} AND #{maxGuarantee}
        </otherwise>
      </choose>
    </if>
    <if test="minMonthly != null and minMonthly != '' and maxMonthly != null and maxMonthly != ''">
      <choose>
        <when test="inputRank == 1">
          AND jd.a_monthly BETWEEN #{minMonthly} AND #{maxMonthly}
        </when>
        <otherwise>
          AND jd.b_monthly BETWEEN #{minMonthly} AND #{maxMonthly}
        </otherwise>
      </choose>
    </if>
  </sql>

  <!-- 방금 입력한 input sn 찾기 -->
  <select
    id="getActiveInputSn"
    resultType="Integer"
  >
    /* kt.aivle.rslt_list.RsltListMapper.getActiveInputSn*/
    SELECT COALESCE(
      (SELECT MAX(i.input_sn)
      FROM input AS i
      WHERE i.user_sn = #{userSn}
      AND i.gongo_sn = #{gongoSn}),
      0
    ) AS result;
  </select>

  <!-- input sn으로 input 정보 받아오기 -->
  <select
    id="getInputInfo"
    resultType="kt.aivle.rslt_list.model.InputInfo"
  >
    /* kt.aivle.rslt_list.RsltListMapper.getInputInfo*/
    SELECT
    input_type
    , input_rank
    , input_score
    FROM input AS i
    WHERE i.input_sn = #{inputSn}
  </select>

  <!-- 공고 sn으로 해당하는 공고 dtlsn 찾기 -->
  <select
    id="getDtlSnByGongoSn"
    resultType="Integer"
  >
    /* kt.aivle.rslt_list.RsltListMapper.getDtlSnByGongoSn*/
    SELECT
    gd.gongo_dtl_sn
    FROM gongo_dtl AS gd
    WHERE gd.gongo_sn = #{sn}
  </select>

  <!-- 공고 dtlsn으로 해당하는 주택 sn 찾기 -->
  <select
    id="getJutaekSnByDtlSn"
    resultType="Integer"
  >
    /* kt.aivle.rslt_list.RsltListMapper.getJutaekSnByDtlSn*/
    SELECT
      gd.jutaek_sn
    FROM gongo_dtl AS gd
    WHERE gd.gongo_dtl_sn IN(
    <foreach item="item" collection="list" separator=",">
      #{item}
    </foreach>
    );
  </select>

  <!-- 주택 sn으로 주택 리스트 찾기 cnt -->
  <select
    id="getJutaekListCnt"
    resultType="Integer"
  >
    /* kt.aivle.rslt_list.RsltListMapper.getJutaekListCnt*/
    SELECT
    COUNT(*)
    FROM jutaek_dtl AS jd
    LEFT JOIN jutaek AS j ON j.jutaek_sn = jd.jutaek_sn
    WHERE jd.jutaek_sn IN(
    <foreach item="item" collection="jutaekSnList" separator=",">
      #{item}
    </foreach>
    )
    <include refid="getJutaekList" />
  </select>

  <!-- 주택 sn으로 주택 리스트 찾기 -->
  <select
    id="getJutaekList"
    resultType="kt.aivle.rslt_list.model.JutaekInfo"
  >
    /* kt.aivle.rslt_list.RsltListMapper.getJutaekList*/
    SELECT
    jd.jutaek_dtl_sn
    , jd.jutaek_sn
    , jd.jutaek_size
    , jd.residential_area
    , jd.common_area
    , jd.other_area
    , jd.jutaek_type
    , jd.guarantee
    , jd.monthly
    , j.jutaek_name
    , j.jutaek_address
    FROM jutaek_dtl AS jd
    LEFT JOIN jutaek AS j ON j.jutaek_sn = jd.jutaek_sn
    WHERE jd.jutaek_sn IN(
    <foreach item="item" collection="jutaekSnList" separator=",">
      #{item}
    </foreach>
    )
    <include refid="getJutaekList" />
    <if test='pageNum gt 0'>
      LIMIT #{pageOffset}, #{pageSize}
    </if>
  </select>

  <!--주택 상세정보 조회 -->
  <select
    id="getJutaekDtl"
    resultType="kt.aivle.rslt_list.model.JutaekDtlInfo"
  >
    /* kt.aivle.rslt_list.RsltListMapper.getJutaekDtl*/
    SELECT
    jd.jutaek_dtl_sn
    , jd.jutaek_sn
    , jd.jutaek_size
    , jd.residential_area
    , jd.common_area
    , jd.other_area
    , j.jutaek_name
    , j.jutaek_address
    , j.longitude
    , j.latitude
    FROM jutaek_dtl AS jd
    LEFT JOIN jutaek AS j ON j.jutaek_sn = jd.jutaek_sn
    WHERE jd.jutaek_dtl_sn = #{jutaekDtlSn}
  </select>

</mapper>