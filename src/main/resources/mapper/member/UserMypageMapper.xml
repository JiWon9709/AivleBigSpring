<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kt.aivle.member.mapper.UserMypageMapper">


    <select id="findBasicInfoByUserSn" parameterType="Long" resultType="kt.aivle.member.model.UserBasicInfoResponse">
        /* UserMypageMapper.findBasicInfoByUserSn */
        SELECT user_sn, user_name, email, profile_image, created_dt, telno
        FROM user
        WHERE user_sn = #{userSn}
        AND use_yn = 'Y'
    </select>

    <select id="findProfileByUserSn" parameterType="Long" resultType="kt.aivle.member.model.UserProfileResponse">
        /* UserMypageMapper.findProfileByUserSn */
        SELECT user_sn, user_name, email, gender, address, zip_code, telno
        FROM user
        WHERE user_sn = #{userSn}
        AND use_yn = 'Y'
    </select>

    <update id="updateUserProfile">
        /* UserMypageMapper.updateUserProfile */
        UPDATE user
        SET address = #{request.address},
        zip_code = #{request.zipCode},
        telno = #{request.telno},
        updated_dt = NOW()
        WHERE user_sn = #{userSn}
        AND use_yn = 'Y'
    </update>

    <!-- 저장된 비밀번호 조회 -->
    <select id="getStoredPassword" parameterType="Long" resultType="String">
        /* UserMypageMapper.getStoredPassword */
        SELECT password
        FROM user
        WHERE user_sn = #{userSn}
        AND use_yn = 'Y'
    </select>

    <!-- 비밀번호 업데이트 -->
    <update id="updatePassword">
        /* UserMypageMapper.updatePassword */
        UPDATE user
        SET password = #{password},
            updated_dt = NOW()
        WHERE user_sn = #{userSn}
        AND use_yn = 'Y'
    </update>

    <!-- 회원 탈퇴 처리 -->
    <update id="updateUserWithdrawal">
        /* UserMypageMapper.updateUserWithdrawal */
        UPDATE user
        SET use_yn = 'N',
            updated_dt = NOW()
        WHERE user_sn = #{userSn}
        AND use_yn = 'Y'
    </update>

    <!-- 프로필 사진 업데이트 -->
    <update id="updateUserProfileImage">
        UPDATE user
        SET profile_image = #{profileImage}
        WHERE user_sn = #{userSn}
    </update>
    <!-- 프로필 사진 조회 -->
    <select id="getUserProfileImage" resultType="string">
        SELECT profile_image FROM user WHERE user_sn = #{userSn}
    </select>

    <!-- 프로필 사진 삭제 -->
    <update id="deleteUserProfileImage">
        UPDATE user
        SET profile_image = NULL
        WHERE user_sn = #{userSn}
    </update>

</mapper>